<?xml version="1.0" encoding="UTF-8"?>
<testsuite name="com.example.service.BasicServiceTest" tests="8" skipped="0" failures="0" errors="0" timestamp="2017-10-19T12:07:23" hostname="FKXGRH2" time="0.152">
  <properties/>
  <testcase name="getWebServices" classname="com.example.service.BasicServiceTest" time="0.02"/>
  <testcase name="getWebServices1" classname="com.example.service.BasicServiceTest" time="0.03"/>
  <testcase name="addWebService" classname="com.example.service.BasicServiceTest" time="0.022"/>
  <testcase name="exists" classname="com.example.service.BasicServiceTest" time="0.01"/>
  <testcase name="findOne" classname="com.example.service.BasicServiceTest" time="0.01"/>
  <testcase name="deleteAll" classname="com.example.service.BasicServiceTest" time="0.02"/>
  <testcase name="deleteById" classname="com.example.service.BasicServiceTest" time="0.011"/>
  <testcase name="getWithCriteria" classname="com.example.service.BasicServiceTest" time="0.019"/>
  <system-out><![CDATA[2017-10-19 15:07:23.308  INFO 7012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Neither @ContextConfiguration nor @ContextHierarchy found for test class [com.example.service.BasicServiceTest], using SpringBootContextLoader
2017-10-19 15:07:23.318  INFO 7012 --- [    Test worker] o.s.t.c.support.AbstractContextLoader    : Could not detect default resource locations for test class [com.example.service.BasicServiceTest]: no resource found for suffixes {-context.xml, Context.groovy}.
2017-10-19 15:07:23.318  INFO 7012 --- [    Test worker] t.c.s.AnnotationConfigContextLoaderUtils : Could not detect default configuration classes for test class [com.example.service.BasicServiceTest]: BasicServiceTest does not declare any static, non-private, non-final, nested classes annotated with @Configuration.
2017-10-19 15:07:23.318  INFO 7012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Found @SpringBootConfiguration com.example.SpringBootPostgresExample for test class com.example.service.BasicServiceTest
2017-10-19 15:07:23.318  INFO 7012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Loaded default TestExecutionListener class names from location [META-INF/spring.factories]: [org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener, org.springframework.test.context.web.ServletTestExecutionListener, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener, org.springframework.test.context.support.DependencyInjectionTestExecutionListener, org.springframework.test.context.support.DirtiesContextTestExecutionListener, org.springframework.test.context.transaction.TransactionalTestExecutionListener, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener]
2017-10-19 15:07:23.328  INFO 7012 --- [    Test worker] .b.t.c.SpringBootTestContextBootstrapper : Using TestExecutionListeners: [org.springframework.test.context.web.ServletTestExecutionListener@7e21dea4, org.springframework.test.context.support.DirtiesContextBeforeModesTestExecutionListener@41b54a76, org.springframework.boot.test.autoconfigure.SpringBootDependencyInjectionTestExecutionListener@770eab61, org.springframework.test.context.support.DirtiesContextTestExecutionListener@8ce9420, org.springframework.test.context.transaction.TransactionalTestExecutionListener@78eabf63, org.springframework.test.context.jdbc.SqlScriptsTestExecutionListener@1367bcf2, org.springframework.boot.test.mock.mockito.MockitoTestExecutionListener@11b0585c, org.springframework.boot.test.autoconfigure.restdocs.RestDocsTestExecutionListener@6da3a1de, org.springframework.boot.test.mock.mockito.ResetMocksTestExecutionListener@401f1aae, org.springframework.boot.test.autoconfigure.web.client.MockRestServiceServerResetTestExecutionListener@6e31ae73, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverTestExecutionListener@7dd06951, org.springframework.boot.test.autoconfigure.web.servlet.MockMvcPrintOnlyOnFailureTestExecutionListener@d0d8a64]
2017-10-19 15:07:23.338  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@4c66d511, testMethod = getWebServices@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
2017-10-19 15:07:23.348  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@4c66d511, testMethod = getWebServices@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.348  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@3eea6f7b, testMethod = getWebServices1@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_ order by webservice0_.id asc
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_ order by webservice0_.id desc
2017-10-19 15:07:23.378  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@3eea6f7b, testMethod = getWebServices1@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.378  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@57b60f21, testMethod = addWebService@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
2017-10-19 15:07:23.400  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@57b60f21, testMethod = addWebService@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.410  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@3c6abeef, testMethod = exists@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
2017-10-19 15:07:23.420  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@3c6abeef, testMethod = exists@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.420  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@67dbc304, testMethod = findOne@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
2017-10-19 15:07:23.430  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@67dbc304, testMethod = findOne@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.430  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@983f0d6, testMethod = deleteAll@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
2017-10-19 15:07:23.450  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@983f0d6, testMethod = deleteAll@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.450  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@47163092, testMethod = deleteById@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select count(*) as col_0_0_ from public.web_service webservice0_ where webservice0_.id=?
2017-10-19 15:07:23.461  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@47163092, testMethod = deleteById@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
2017-10-19 15:07:23.461  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Began transaction (1) for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@55a8caeb, testMethod = getWithCriteria@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]]; transaction manager [org.springframework.orm.jpa.JpaTransactionManager@2c342157]; rollback [true]
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: delete from public.web_service where id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: select webservice0_.id as id1_0_0_, webservice0_.date_contract as date_con2_0_0_, webservice0_.json_data as json_dat3_0_0_, webservice0_.name as name4_0_0_, webservice0_.price as price5_0_0_ from public.web_service webservice0_ where webservice0_.id=?
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: insert into public.web_service (date_contract, json_data, name, price, id) values (?, ?, ?, ?, ?)
Hibernate: select webservice0_.id as id1_0_, webservice0_.date_contract as date_con2_0_, webservice0_.json_data as json_dat3_0_, webservice0_.name as name4_0_, webservice0_.price as price5_0_ from public.web_service webservice0_ where webservice0_.name like ?
2017-10-19 15:07:23.480  INFO 7012 --- [    Test worker] o.s.t.c.transaction.TransactionContext   : Rolled back transaction for test context [DefaultTestContext@4834f22b testClass = BasicServiceTest, testInstance = com.example.service.BasicServiceTest@55a8caeb, testMethod = getWithCriteria@BasicServiceTest, testException = [null], mergedContextConfiguration = [WebMergedContextConfiguration@35ff3b01 testClass = BasicServiceTest, locations = '{}', classes = '{class com.example.SpringBootPostgresExample}', contextInitializerClasses = '[]', activeProfiles = '{}', propertySourceLocations = '{}', propertySourceProperties = '{org.springframework.boot.test.context.SpringBootTestContextBootstrapper=true}', contextCustomizers = set[org.springframework.boot.test.autoconfigure.properties.PropertyMappingContextCustomizer@0, org.springframework.boot.test.autoconfigure.web.servlet.WebDriverContextCustomizerFactory$Customizer@3c5ea09c, org.springframework.boot.test.context.SpringBootTestContextCustomizer@512ff00b, org.springframework.boot.test.context.filter.ExcludeFilterContextCustomizer@640ab171, org.springframework.boot.test.json.DuplicateJsonObjectContextCustomizerFactory$DuplicateJsonObjectContextCustomizer@14363c8b, org.springframework.boot.test.mock.mockito.MockitoContextCustomizer@0], resourceBasePath = 'src/main/webapp', contextLoader = 'org.springframework.boot.test.context.SpringBootContextLoader', parent = [null]]].
]]></system-out>
  <system-err><![CDATA[]]></system-err>
</testsuite>
